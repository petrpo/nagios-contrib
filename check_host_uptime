#!/bin/bash
# Description: Nagios plugin to check uptimes of linux host
# Version 0.2
# Created by petrpo
# credits to http://askubuntu.com/questions/77352/need-help-with-bash-checking-$
#
# restart was : uptime : 0 days, less than x hours means system was restarted !!!
#
# times are hardcoded inside of script
#

usage() {
        echo
        echo "Usage: $0 [-c minutes] [-w minutes]"
        echo
}

while getopts w:c: OPT; do
  case $OPT in
    w)
      UPTIME_WARN=$OPTARG
#      echo "WARN : $UPTIME_WARN"
      ;;
    c)
      UPTIME_CRIT=$OPTARG
#      echo "CRIT : $UPTIME_CRIT"
      ;;
    ?)
      echo "Error in ARGS"
      exit;
      ;;
  esac
done

if [ -z $UPTIME_WARN ] || [ -z $UPTIME_CRIT ] ; then
  usage
  exit 1
fi

#echo "WARN : $UPTIME_WARN"
#echo "CRIT : $UPTIME_CRIT"

COMMAND="cat "

LOWER=$UPTIME_CRIT
HIGHER=$UPTIME_WARN

UP_SECS="$($COMMAND /proc/uptime | grep -o '^[0-9]\+')"
UP_MINS=$((${UP_SECS} / 60))
UP_HOURS=$((${UP_MINS} / 60))
UP_DAYS=$((${UP_HOURS} / 24))

#echo "MINS : $UP_MINS"
#echo "HOURS: $UP_HOURS"
#echo "DAYS : $UP_DAYS"

# less than .... server was restarted
if [ "${UP_MINS}" -lt "$LOWER"  ] || [ "${UP_MINS}" -eq "$LOWER" ] ; then
    echo "CRITICAL - uptime : less then ${UP_HOURS} hours"
    RET=2
elif [ "${UP_MINS}" -gt "$LOWER" ] && [ "${UP_MINS}" -lt "$HIGHER" ] ; then
    echo "WARNING - uptime : ${UP_HOURS} hours"
    RET=1
elif [ "${UP_MINS}" -eq "$HIGHER" ] || [ "${UP_MINS}" -gt "$HIGHER" ] ; then
    echo "OK - uptime : ${UP_HOURS} hour(s)"
    RET=0
fi

exit $RET
